CREATE DATABASE INVENTORY

CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100) NOT NULL,
    UnitPrice NUMERIC(10, 2) NOT NULL,
    Category VARCHAR(50) NOT NULL,
    SupplierID INT
);

INSERT INTO Products (ProductID, ProductName, UnitPrice, Category, SupplierID) VALUES
(100, 'Smartphone', 699.99, 'Electronics', 100),
(22, 'Jeans', 49.99, 'Clothing', 200),
(935, 'Lawn Mower', 299.99, 'Home & Garden', 300),
(406, 'Shampoo', 9.99, 'Health & Beauty', 400),
(254, 'Laptop', 1199.99, 'Electronics', 100),
(635, 'T-Shirt', 19.99, 'Clothing', 200),
(275, 'Garden Hose', 24.99, 'Home & Garden', 300),
(843, 'Toothpaste', 2.99, 'Health & Beauty', 400),
(293, 'Headphones', 149.99, 'Electronics', 100),
(310, 'Dress', 79.99, 'Clothing', 200),
(114, 'Grill', 399.99, 'Home & Garden', 300),
(152, 'Body Lotion', 7.99, 'Health & Beauty', 400),
(143, 'Tablet', 299.99, 'Electronics', 100),
(314, 'Sweater', 39.99, 'Clothing', 200),
(175, 'Potted Plant', 29.99, 'Home & Garden', 300),
(163, 'Razor', 5.99, 'Health & Beauty', 400),
(137, 'Smart Watch', 199.99, 'Electronics', 100),
(158, 'Skirt', 34.99, 'Clothing', 200),
(219, 'Outdoor Furniture Set', 899.99, 'Home & Garden', 300),
(220, 'Sunscreen', 12.99, 'Health & Beauty', 400);



-- Create Suppliers Table
CREATE TABLE Suppliers (
    SupplierID INT PRIMARY KEY,
    SupplierName VARCHAR(100) NOT NULL,
    ContactName VARCHAR(100),
    Phone VARCHAR(20)
);

-- Insert Supplier Data
INSERT INTO Suppliers (SupplierID, SupplierName, ContactName, Phone) VALUES
    (100, 'ElectroTech Supplies', 'John Doe', '123-456-7890'),
    (200, 'Fashion Trends Inc.', 'Jane Smith', '456-789-0123'),
    (300, 'Garden Delights LLC', 'David Johnson', '789-012-3456'),
    (400, 'Beauty Essentials Ltd.', 'Emily Wilson', '012-345-6789');


-- Create Orders Table
CREATE TABLE Orders (
    OrderID SERIAL PRIMARY KEY,
    ProductID INT,
    OrderDate DATE,
    Quantity INT,
    UnitPrice NUMERIC(10, 2),
    TotalAmount NUMERIC(10, 2),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Insert Order Data
INSERT INTO Orders (OrderID, ProductID, OrderDate, Quantity, UnitPrice, TotalAmount) VALUES
    ('00001', 100, '2024-03-01', 5, 699.99, 3499.95),
    ('00002', 22, '2024-03-02', 3, 49.99, 149.97),
    ('00003', 935, '2024-03-03', 2, 299.99, 599.98),
    ('00004', 406, '2024-03-04', 10, 9.99, 99.90),
    ('00005', 254, '2024-03-05', 1, 1199.99, 1199.99),
    ('00006', 635, '2024-03-06', 4, 19.99, 79.96),
    ('00007', 275, '2024-03-07', 2, 24.99, 49.98),
    ('00008', 843, '2024-03-08', 3, 2.99, 8.97),
    ('00009', 293, '2024-03-09', 1, 149.99, 149.99),
    ('00010', 310, '2024-03-10', 2, 79.99, 159.98),
    ('00011', 114, '2024-03-11', 1, 399.99, 399.99),
    ('00012', 152, '2024-03-12', 5, 7.99, 39.95),
    ('00013', 143, '2024-03-13', 2, 299.99, 599.98),
    ('00014', 314, '2024-03-14', 3, 39.99, 119.97),
    ('00015', 175, '2024-03-15', 2, 29.99, 59.98),
    ('00016', 163, '2024-03-16', 4, 5.99, 23.96),
    ('00017', 137, '2024-03-17', 1, 199.99, 199.99),
    ('00018', 158, '2024-03-18', 2, 34.99, 69.98),
    ('00019', 219, '2024-03-19', 1, 899.99, 899.99),
    ('00020', 220, '2024-03-20', 3, 12.99, 38.97),
    ('00021', 100, '2024-03-21', 2, 699.99, 1399.98),
    ('00022', 22, '2024-03-22', 1, 49.99, 49.99),
    ('00023', 935, '2024-03-23', 3, 299.99, 899.97),
    ('00024', 406, '2024-03-24', 4, 9.99, 39.96),
    ('00025', 254, '2024-03-25', 1, 1199.99, 1199.99),
    ('00026', 635, '2024-03-26', 2, 19.99, 39.98),
    ('00027', 275, '2024-03-27', 1, 24.99, 24.99),
    ('00028', 843, '2024-03-28', 5, 2.99, 14.95),
    ('00029', 293, '2024-03-29', 3, 149.99, 449.97),
    ('00030', 310, '2024-03-30', 1, 79.99, 79.99);

CREATE TABLE Inventory (
    ProductID INT PRIMARY KEY,
    StockQuantity INT NOT NULL,
    ReorderLevel INT NOT NULL,
    ReorderQuantity INT NOT NULL,
    LastUpdated DATE
);
INSERT INTO Inventory (ProductID, StockQuantity, ReorderLevel, ReorderQuantity, LastUpdated)
VALUES
(100, 3, 5, 50, '2024-02-01'),
(22, 50, 10, 100, '2024-02-02'),
(935, 10, 3, 30, '2024-02-03'),
(406, 100, 20, 200, '2024-02-04'),
(254, 15, 5, 50, '2024-02-05'),
(635, 30, 8, 80, '2024-02-06'),
(275, 10, 7, 70, '2024-02-07'),
(843, 37, 50, 500, '2024-02-08'),
(293, 10, 3, 30, '2024-02-09'),
(310, 40, 10, 100, '2024-02-10'),
(114, 5, 2, 20, '2024-02-11'),
(152, 12, 30, 300, '2024-02-12'),
(143, 10, 3, 30, '2024-02-13'),
(314, 60, 15, 150, '2024-02-14'),
(175, 20, 5, 50, '2024-02-15'),
(163, 42, 60, 600, '2024-02-16'),
(137, 8, 2, 20, '2024-02-17'),
(158, 70, 18, 180, '2024-02-18'),
(219, 2, 1, 10, '2024-02-19'),
(220, 8, 25, 250, '2024-02-20');


Identify Low Stock Items:
SELECT i.ProductID,p.productname, i.StockQuantity
FROM inventory as i
left join products as p
on i.ProductID = p.ProductID
WHERE i.StockQuantity < i.ReorderLevel;

Calculate Total Inventory Value:
SELECT SUM(i.StockQuantity * p.UnitPrice) AS TotalValue
FROM inventory as i
JOIN products as p
ON i.ProductID = p.ProductID;

Identify Slow-Moving Items:
SELECT p.ProductID, p.ProductName, SUM(o.Quantity) AS TotalSales
FROM products AS p
Right JOIN orders AS o ON p.ProductID = o.ProductID
GROUP BY p.ProductID
HAVING SUM(o.Quantity) < (SELECT AVG(Quantity) FROM orders);

Forecast Demand for Next Month:
SELECT ProductID, (SUM(Quantity)/1) AS TotalSales
FROM Orders
WHERE OrderDate BETWEEN '2024-03-01' AND '2024-03-29'
GROUP BY ProductID;

Top 5 higest selling product
select o.ProductID, p.productname, sum(o.Quantity) from orders as o
left join products as p
on o.ProductID = p.ProductID
group by o.ProductID,p.productname
order by sum(o.Quantity) desc
limit 5;